name: CI/CD
on:
  push:
  pull_request:
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Lint code
        run: |
          npm i
          npx eslint .
      - name: Test
        run: echo "Testing..."
  cd:
    name: "Deployment"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Init
        run: terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_KEY }}" -backend-config="bucket=${{ secrets.AWS_S3_BUCKET }}" -backend-config="key=${{ secrets.AWS_S3_KEY }}" -backend-config="region=${{ secrets.AWS_REGION }}"
      - name: Terraform Validate
        run: terraform validate -no-color
      - name: Execute resource ECR to create repo if not exists
        id: ecr
        run: |
          terraform apply -target=aws_ecr_repository.ecr -auto-approve
          echo "::set-output name=SELECTED_COLOR::hello"
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_aws_ecr_name: ${{ secrets.AWS_ECR_REPOSITORY }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      - name: Test output
        run: echo "${{ steps.ecr.outputs.SELECTED_COLOR }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$AWS_ECR_REPOSITORY:$IMAGE_TAG"
      # - name: Terraform apply
      #   run: terraform apply -auto-approve
      #   env:
      #     TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
      #     TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
      #     TF_VAR_aws_ecr_name: ${{ secrets.AWS_ECR_REPOSITORY }}
      #     TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
